{"version":3,"sources":["styles/reset.scss","styles/blocks/calendar.scss","styles/utils/_variables.scss","styles/utils/_functions.scss","styles/utils/_mixins.scss"],"names":[],"mappings":"AAAA,EACE,qBAAsB,CAGxB,KACE,QAAS,CCHT,gBACE,aAAc,CAKlB,UACE,YAAa,CACb,cAAe,CACf,OCTiB,CDWjB,kBAAmE,CACnE,mBCXqB,CDarB,eEdsE,CF+BnE,sCAEG,aAA0D,CAF7D,sCAEG,iBAA0D,CAF7D,sCAEG,iBAA0D,CAF7D,sCAEG,iBAA0D,CAF7D,sCAEG,iBAA0D,CAF7D,sCAEG,iBAA0D,CAF7D,sCAEG,iBAA0D,CAM7D,gLAEG,YAAa,CAKnB,gBACE,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CGlDrB,WFDmB,CEEnB,YFFmB,CDsDjB,qBAAsB,CACtB,qBAAsB,CACtB,6CAAiD,CARlD,mCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,oCAYK,sCAAyC,CACzC,cAAe,CACf,WAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,qCAYK,sCAAyC,CACzC,cAAe,CACf,YAAkB,CAdvB,sBAmBG,cAAe,CACf,qBAAsB,CACtB,2BAAsD","file":"main.1b9fcab1.css","sourceRoot":"../src","sourcesContent":["* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n}\n",".body {\n  // center calendar\n  &__calendar {\n    margin: 0 auto;\n\n  }\n}\n\n.calendar {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $day-cells-gap;\n\n  padding-block: ($calendar-padding + $hovered-cell-translate-length);\n  padding-inline: $calendar-padding;\n\n  max-width: getMaxWidth(\n    $day-cell-size,\n    $cells-per-line,\n    $day-cells-gap,\n    $calendar-padding\n  );\n\n  $week:\n    \"mon\" 0,\n    \"tue\" 1,\n    \"wed\" 2,\n    \"thu\" 3,\n    \"fri\" 4,\n    \"sat\" 5,\n    \"sun\" 6;\n\n  @each $day, $pozition in $week {\n    &--start-day_#{$day} {\n      & :first-child {\n        margin-left: $pozition * ($day-cell-size + $day-cells-gap);\n      }\n    }\n  }\n\n  @for $month-length from 28 through 31 {\n    &--month-length_#{$month-length} {\n      & :nth-child(n + #{$month-length + 1}) {\n        display: none;\n      }\n    }\n  }\n\n  &__cell {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    @include square($day-cell-size);\n    border: 1px solid #000;\n    background-color: #eee;\n    transition: background-color 0.5s, transform 0.5s;\n\n    @for $day from 1 through 31 {\n      &:nth-child(#{$day})::before {\n        font-family: Arial, Helvetica, sans-serif;\n        font-size: 30px;\n        content: \"#{$day}\";\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n      background-color: pink;\n      transform: translateY(-$hovered-cell-translate-length);\n    }\n  }\n}\n","$day-cell-size: 100px;\n$cells-per-line: 7;\n$day-cells-gap: 1px;\n$calendar-padding: 10px;\n$hovered-cell-translate-length: 20px;\n","// returns width value, sum of columns width, gaps and paddings\n@function getMaxWidth($width, $quantity, $gap, $padding) {\n  @return ($width * $quantity) + $gap * ($quantity - 1) + ($padding * 2);\n}\n","@mixin square($size) {\n  width: $size;\n  height: $size;\n}\n"]}